{
    "type": "Ext.app.Application",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "controllers": [
            "CLogin",
            "CKPIGroups",
            "CKPIs",
            "CAlerts",
            "CCharts",
            "CNav",
            "CSettings",
            "CAlertDetails",
            "CMain"
        ],
        "models": [
            "ModelKPIGroup",
            "ModelKPI",
            "ModelChart",
            "ModelAlert",
            "ModelMenu"
        ],
        "name": "OccapiMobile",
        "startupImage": [
            "{\r",
            "    '320x460': 'occapi_logo_login.png',\r",
            "    '640x920': 'occapi_logo_login.png',\r",
            "    '640x1096': 'occapi_logo_login.png',\r",
            "    '768x1004': 'occapi_logo_login.png',\r",
            "    '748x1024': 'occapi_logo_login.png',\r",
            "    '1536x2008': 'occapi_logo_login.png',\r",
            "    '1496x2048': 'occapi_logo_login.png'\r",
            "}"
        ],
        "stores": [
            "StoreKPIGroups",
            "StoreKPIs",
            "StoreCharts",
            "StoreAlerts",
            "StoreMenu"
        ],
        "views": [
            "VLogin",
            "VNav",
            "VKPIGroups",
            "VKPIs",
            "VAlerts",
            "VLineChart",
            "VSettings",
            "VAlertDetails",
            "VAbout",
            "VMain",
            "MyLineChart1"
        ]
    },
    "designerId": "application",
    "cn": [
        {
            "type": "fixedfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "launch",
                "implHandler": [
                    "App = this;\r",
                    "\r",
                    "settings.init();\r",
                    "\r",
                    "// SETTINGS\r",
                    "App.s = {\r",
                    "    debug: false,\r",
                    "    allowCrossOrigin: true,\r",
                    "    dateTimeFormat: \"d-m-Y H:i:s\",\r",
                    "    timeFormat: \"H:i:s\"\r",
                    "};\r",
                    "\r",
                    "// CONSTANTS\r",
                    "App.c = {\r",
                    "    apiBaseURL: App.s.allowCrossOrigin ? \"http://212.235.191.163:8080/inteliui/resources/\" : \"http://drinovc.si/dev/occapiMobile/api/\"\r",
                    "};\r",
                    "\r",
                    "// USER DATA\r",
                    "App.user = {\r",
                    "    user: null,\r",
                    "    pass: null,\r",
                    "    token: null\r",
                    "};\r",
                    "\r",
                    "// SELECTION DATA\r",
                    "App.sel = {\r",
                    "    groupName: null,\r",
                    "    kpiName: null,\r",
                    "    monitor: null,\r",
                    "    chartData: null,\r",
                    "    chartLegend: null\r",
                    "};\r",
                    "\r",
                    "// DEFER IDS\r",
                    "App.deferIds = {\r",
                    "    alerts: null,\r",
                    "    charts: null\r",
                    "};\r",
                    "\r",
                    "// SELECTION RECORDS\r",
                    "App.recKPIGroup = null;\r",
                    "App.recKPI = null;\r",
                    "\r",
                    "// STORES\r",
                    "App.storeKPIGroups = Ext.getStore(\"StoreKPIGroups\");\r",
                    "App.storeKPIs = Ext.getStore(\"StoreKPIs\");\r",
                    "App.storeCharts = Ext.getStore(\"StoreCharts\");\r",
                    "App.storeAlerts = Ext.getStore(\"StoreAlerts\");\r",
                    "\r",
                    "// CONTROLLERS\r",
                    "App.CNav = App.getController(\"CNav\");\r",
                    "App.CLogin = App.getController(\"CLogin\");\r",
                    "App.CMain = App.getController(\"CMain\");\r",
                    "App.CKPIGroups = App.getController(\"CKPIGroups\");\r",
                    "App.CKPIs = App.getController(\"CKPIs\");\r",
                    "App.CAlerts = App.getController(\"CAlerts\");\r",
                    "App.CCharts = App.getController(\"CCharts\");\r",
                    "App.CSettings = App.getController(\"CSettings\");\r",
                    "App.CAlertDetails = App.getController(\"CAlertDetails\");\r",
                    "\r",
                    "// VIEWS\r",
                    "App.VNav = null;\r",
                    "App.VMain = null;\r",
                    "App.VMenu = null;\r",
                    "App.VLogin = null;\r",
                    "App.VKPIGroups = null;\r",
                    "App.VKPIs = null;\r",
                    "App.VAlerts = null;\r",
                    "App.VLineChart = null;\r",
                    "App.VAlertDetails = null;\r",
                    "\r",
                    "\r",
                    "App.initGlobalHandlers();"
                ]
            },
            "designerId": "f61fe826-cf62-4104-8107-cfdefa49a561"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "initGlobalHandlers",
                "implHandler": [
                    "// RELATIVE REQUESTS (API BASE + ...)\r",
                    "Ext.Ajax.on(\"beforerequest\", function(conn, options, eOpts) {\r",
                    "    if(options.url) {\r",
                    "        if(App.s.allowCrossOrigin) {\r",
                    "            options.url = options.url.replace(/\\{user\\}/ig, App.user.user);\r",
                    "            options.url = options.url.replace(/\\{pass\\}/ig, App.user.pass);\r",
                    "            options.url = options.url.replace(/\\{token\\}/ig, App.user.token);\r",
                    "            options.url = options.url.replace(/\\{groupName\\}/ig, App.sel.groupName);\r",
                    "            options.url = options.url.replace(/\\{kpi\\}/ig, App.sel.kpiName);\r",
                    "            options.url = options.url.replace(/\\{monitor\\}/ig, App.sel.monitor);\r",
                    "\r",
                    "            options.url = App.c.apiBaseURL + options.url;\r",
                    "        }\r",
                    "        else {\r",
                    "            options.url = App.c.apiBaseURL;\r",
                    "        }\r",
                    "    }\r",
                    "});\r",
                    "\r",
                    "// GLOBAL REQUEST EXCEPTION MESSAGE\r",
                    "Ext.Ajax.on(\"requestexception\", function (conn, response, options, eOpts) {\r",
                    "\tApp.unmask();\r",
                    "\r",
                    "    if(!App.VLogin.isHidden()) {\r",
                    "        return;\r",
                    "    }\r",
                    "\r",
                    "\tif (response.status == -1) {\r",
                    "\t\tdebugLog(\"Request canceled\");\r",
                    "\t\treturn;\r",
                    "\t}\r",
                    "\r",
                    "\tvar params = \"\";\r",
                    "\tExt.Object.each(options.params, function (key, value) {\r",
                    "\t\tparams += \"&nbsp;-&nbsp;<b>\" + key + \":</b> \" + value + \"<br />\";\r",
                    "\t});\r",
                    "\tparams = params.replace(/,/g, \", \");\r",
                    "\r",
                    "\tvar info = null;\r",
                    "\r",
                    "\tif (response.status === 0) {\r",
                    "\t\tif (response.timedout) {\r",
                    "\t\t\t// request timedout\r",
                    "\t\t\tinfo = \"<b>INFO:</b> Request timed out. Please check your connection to server.<br />\";\r",
                    "\t\t} else {\r",
                    "\t\t\t// server unreachable\r",
                    "\t\t\tinfo = \"<b>INFO:</b> Server may be unreachable. Please check your connection to server.<br />\";\r",
                    "\t\t}\r",
                    "\t}\r",
                    "    else if (response.status == 401) {\r",
                    "        info = \"Session timed-out. <br />Please login again.\";\r",
                    "        response.responseText = null;\r",
                    "    }\r",
                    "    else {\r",
                    "        info = \"Status code \" + response.status;\r",
                    "    }\r",
                    "\r",
                    "\tvar msg = \"\";\r",
                    "\tvar url = options.url;\r",
                    "\tvar status = response.status;\r",
                    "\r",
                    "\tif (App.s.debug) {\r",
                    "\t\t// show long message\r",
                    "\t\tmsg = \"<b>TYPE:</b> request exception<br />\" +\r",
                    "\t\t\t\"<b>METHOD:</b> \" + options.method + \"<br />\" +\r",
                    "\t\t\t\"<b>URL:</b> \" + url + \"<br />\" +\r",
                    "\t\t\t\"<b>STATUS:</b> \" + status + \"<br />\" +\r",
                    "\t\t\tinfo +\r",
                    "\t\t\t\"<b>RESPONSE:</b> \" + response.responseText + \"<br />\" +\r",
                    "\t\t\t\"<b>PARAMS:</b><br />\" + params + \"<br />\";\r",
                    "\t} else {\r",
                    "\t\t// show simple message\r",
                    "\t\tmsg = info;\r",
                    "\t}\r",
                    "\r",
                    "\tExt.Msg.show({\r",
                    "\t\ttitle : \"Error\",\r",
                    "\t\tmessage : msg,\r",
                    "\t\tfn : function () {\r",
                    "\t\t\tExt.Msg.removeCls(\"global-err-msg\"); // REMOVE custom global msg style\r",
                    "\t\t},\r",
                    "\t\tbuttons : Ext.Msg.OK,\r",
                    "        cls : App.s.debug ? \"global-err-msg\" : \"\"\r",
                    "\t});\r",
                    "});\r",
                    "\r",
                    "/*\r",
                    "// INTERCEPT EVERY REQUEST for error checking, verson compare,...\r",
                    "// GLOBAL \"SUCCESS == FALSE\" MESSAGE\r",
                    "Ext.Ajax.on('requestcomplete', function (connection, response, options) {\r",
                    "\ttry {\r",
                    "\t\tvar intercept = Ext.decode(response.responseText);\r",
                    "\t\tif (intercept) {\r",
                    "\t\t\tif (!intercept.success) {\r",
                    "\t\t\t\tApp.unmask();\r",
                    "\r",
                    "\t\t\t\tvar params = \"\";\r",
                    "\t\t\t\tExt.Object.each(options.params, function (key, value) {\r",
                    "\t\t\t\t\tparams += \"&nbsp;-&nbsp;<b>\" + key + \":</b> \" + value + \"<br />\";\r",
                    "\t\t\t\t});\r",
                    "\t\t\t\tparams = params.replace(/,/g, \", \");\r",
                    "\r",
                    "\t\t\t\tvar msg = \"\";\r",
                    "\t\t\t\tvar dll = options.url.substr(0, App.c.apiBaseURL.length - 1);\r",
                    "\t\t\t\tvar url = options.url.substring(App.c.apiBaseURL.length - 1, options.url.indexOf(\"?\") != -1 ? options.url.indexOf(\"?\") : undefined);\r",
                    "\t\t\t\tvar status = response.status;\r",
                    "\r",
                    "\t\t\t\tif (App.s.debug) {\r",
                    "\t\t\t\t\t// show long message\r",
                    "\t\t\t\t\tmsg = \"<b>TYPE:</b> success false<br />\" +\r",
                    "\t\t\t\t\t\t\"<b>METHOD:</b> \" + options.method + \"<br />\" +\r",
                    "\t\t\t\t\t\t\"<b>DLL:</b> \" + dll + \"<br />\" +\r",
                    "\t\t\t\t\t\t\"<b>URL:</b> \" + url + \"<br />\" +\r",
                    "\t\t\t\t\t\t\"<b>STATUS:</b> \" + status + \"<br />\" +\r",
                    "\t\t\t\t\t\t\"<b>REASON:</b> \" + intercept.reason + \"<br />\" +\r",
                    "\t\t\t\t\t\t\"<b>PARAMS:</b><br />\" + params + \"<br />\";\r",
                    "\t\t\t\t} else {\r",
                    "\t\t\t\t\t// show simple message\r",
                    "\t\t\t\t\tmsg = \"<b>REASON:</b> \" + intercept.reason + \"<br />\" +\r",
                    "\t\t\t\t\t\t\"<b>At \" + url + \"</b>\";\r",
                    "\t\t\t\t}\r",
                    "\r",
                    "\t\t\t\tExt.Msg.show({\r",
                    "\t\t\t\t\ttitle : \"Error\",\r",
                    "\t\t\t\t\tmessage : msg,\r",
                    "\t\t\t\t\tfn : function () {\r",
                    "\t\t\t\t\t\tExt.Msg.removeCls(\"global-err-msg\"); // REMOVE custom global msg style\r",
                    "\t\t\t\t\t},\r",
                    "\t\t\t\t\tbuttons : Ext.Msg.OK,\r",
                    "\t\t\t\t\tcls : \"global-err-msg\"\r",
                    "\r",
                    "\t\t\t\t});\r",
                    "\t\t\t\treturn;\r",
                    "\t\t\t}\r",
                    "\t\t}\r",
                    "\t} catch (e) {\r",
                    "\t\tExt.Msg.alert(\"Error\", \"Can not parse message intercepted at ajax request: \" + e.message);\r",
                    "\t}\r",
                    "}, this);\r",
                    "*/"
                ]
            },
            "designerId": "ba4e27b2-1992-4cac-baf4-cdfe9432ee19"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "msg"
                ],
                "fn": "mask",
                "implHandler": [
                    "Ext.Viewport.mask({\r",
                    "    xtype: \"loadmask\",\r",
                    "    message: msg\r",
                    "});"
                ]
            },
            "designerId": "da5b4cef-eecc-400b-ba72-77952c768b32"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "unmask",
                "implHandler": [
                    "Ext.Viewport.unmask();"
                ]
            },
            "designerId": "be204821-11d7-4c77-aea9-7c16a83a3d23"
        },
        {
            "type": "Ext.Viewport",
            "reference": {
                "name": "viewport",
                "type": "object"
            },
            "codeClass": null,
            "userConfig": {
                "autoMaximize": true
            },
            "designerId": "86d3f721-1954-4514-bc01-326d4f186fe8"
        },
        {
            "type": "Ext.Loader",
            "reference": {
                "name": "loader",
                "type": "object"
            },
            "codeClass": null,
            "userConfig": {
                "designer|displayName": "Loader",
                "disableCaching": false
            },
            "designerId": "8fe0a2c5-ffac-4a21-997d-771752ef09f5"
        }
    ]
}