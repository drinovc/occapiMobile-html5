/*
 * File: app/controller/CAlerts.js
 *
 * This file was generated by Sencha Architect
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.2.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('OccapiMobile.controller.CAlerts', {
    extend: 'Ext.app.Controller',

    config: {
        control: {
            "button#btnAlertsBack": {
                tap: 'onBtnAlertsBackTap'
            },
            "list#VAlerts": {
                itemtap: 'onVAlertsItemTap'
            }
        }
    },

    onBtnAlertsBackTap: function(button, e, eOpts) {
        App.VNav.pop();
        App.CAlerts.stop();
    },

    onVAlertsItemTap: function(dataview, index, target, record, e, eOpts) {
        App.VAlertDetails = App.VNav.push({
            xtype: "VAlertDetails"
        });
        App.VAlertDetails.down("toolbar").setTitle("Alert details");

        var map = App.VAlertDetails.down("map");
        map._pos = new google.maps.LatLng(46.151241, 14.995463);
        map._markerTitle = "Map marker test";

        /*
        if(!record.get("longitude") || !record.get("latitude")) {
            Ext.Msg.alert(null, "Alert has no location");
        }
        */
    },

    start: function() {
        App.deferIds.alerts = -1;
        this.load(true);
    },

    load: function(firstTime) {
        App.storeAlerts.load({
            params: {
                token: App.user.token
            },
            scope: this,
            callback: function(records, operation, success) {
                if(success) {
                    if(firstTime) {
                        App.storeAlerts.suspendEvents();
                        App.storeAlerts.clearFilter(true);
                        App.storeAlerts.filter("kpiName", App.sel.kpiName);
                        App.storeAlerts.resumeEvents(true);

                        if(App.storeAlerts.getCount() > 0) {
                            App.VAlerts = App.VNav.push({
                                xtype: "VAlerts",
                                title: App.recKPI.get("kpiCaption")
                            });
                            App.VAlerts.down("titlebar").setTitle(App.recKPI.get("kpiCaption"));
                            App.VAlerts.setLoadingText(null);
                        }
                        else {
                            Ext.Msg.alert(null, "No alerts for " + App.recKPI.get("kpiCaption"));
                        }

                        App.unmask();
                    }
                }
                if(App.deferIds.alerts && settings.get(settings.names.alertsRefreshEnabled)) {
                    App.deferIds.alerts = Ext.defer(function() {
                        this.load(false);
                    }, settings.get(settings.names.alertsRefreshTimeout) * 1000, this, []);
                }
            }
        });
    },

    stop: function() {
        clearTimeout(App.deferIds.alerts);
        App.deferIds.alerts = null;

        App.sel.kpiName = null;
    }

});